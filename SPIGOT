What is Minecraft Media Library?
EpicMediaLib is a library intended for media purposes in Minecraft Servers. It is a very concise and robust library which allows developers to perform simple functions, such as:

- Display Images on a Minecraft Map
- Dither Images using Different Algorithms, including many famous algorithms such as Floyd Steinberg Dithering, Filter Lite Dithering, and Bayer Matrix Dithering. A built in default implementation is also provided for those who want simple. These algorithms are very fast and efficient.
- A built-in Resourcepack Wrapper which allows the developer to use to easily create resourcepacks (currently supporting sound, icon, pack.mcmeta, etc).
- Built in HTTP Server which can be used to serve resourcepacks. This is very ideal if you want to serve the resourcepack on your own server and not use a file hosting site (such as Dropbox or Google Drive)
- Built in Abstract Classes and Methods which can be used by a developer to override and use.
- Support for Maven/Jitpack Dependencies used in the library. It provides a built in dependency loader which downloads libraries from Maven/Jitpack into a mml_libs folder, which is then loaded into the runtime. This saves a lot of storage space for the user that is needed to be downloaded.

And lastly, perhaps its most useful purpose is its ability to play Videos!
Yes, you heard me correct. Videos in Minecraft. You may be thinking, well the quality must be horrible and frame rate must be very bad. Unfortunately, Minecraft's Palette is limited by only a selection of colors, so we only have access to a few amount of colors, however, the results are quite surprising.

- EpicMediaLib has built in support for VLCJ (a Java library for VLC), and JavaCV (a ffmpeg wrapper). These libraries use native languages such as C and C++ to allow very fast frame delivery. Frames can reach up to 35 times per second sometimes or even higher depending on how fast your server can be. In comparison, a smooth animation is one which averages around 24 frames per second. (I am currently working on the JavaCV aspect, should be finished soon!)

- I am currently documenting this as well on the wiki. Most of the abstract classes have a documentation explaining what each method should do. In the future, I will work on providing documentation for all the classes.

How can I contribute?
You can go to this Github repository I have linked to see all the code. EpicMediaLib is open source, meaning that you are allowed to see all the code and contribute by opening issues or pull requests.

What are the Terms of Service?
I ask that you cannot use this in a paid project. The code is being developed still and I want to make a plugin in the near future which uses this library to create an ideal Video Plugin for server owners can use (which will be free). Many developers have worked hard with me to create the dithering algorithms (which is one essential part of this library). If you have any questions or concerns, you can send a private message to me.

Acknowledgments:
- Jetp250 for providng a Floyd Steinberg implementation.
- BananaPuncher714 for optimizing the Floyd Steinberg implementation and using his knowledge of computer graphics to educate me.
